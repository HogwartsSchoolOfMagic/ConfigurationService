<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.1</version>
  </parent>

  <groupId>io.github.ninjaenterprise</groupId>
  <artifactId>configuration-service</artifactId>
  <version>1.1.0</version>
  <name>Ninja Services: configuration</name>
  <description>Configuration service on "Spring Cloud"</description>
  <url>https://github.com/NinjaEnterprise/NinjaConfigurationService</url>

  <organization>
    <name>Vladislav Kuznetsov</name>
    <url>https://vk.com/vladislav_kuznetsov</url>
  </organization>

  <contributors>
    <contributor>
      <name>Vladislav Kuznetsov</name>
      <roles>
        <role>Java Developer</role>
      </roles>
    </contributor>
  </contributors>

  <properties>
    <!-- Pluggable Libraries Versions -->
    <search-library-model.version>5.0.0</search-library-model.version>

    <!-- Pluggable Dependency Versions -->
    <spring-boot-admin-server.version>2.5.4</spring-boot-admin-server.version>
    <spring-cloud-dependencies.version>2021.0.0</spring-cloud-dependencies.version>
    <mapstruct.version>1.4.2.Final</mapstruct.version>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <mockito-junit-jupiter.version>4.0.0</mockito-junit-jupiter.version>

    <!-- Plugin properties -->
    <checkstyle.version>9.1</checkstyle.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <apt-maven-plugin.version>1.1.2</apt-maven-plugin.version>
    <lombok-mapstruct.version>0.2.0</lombok-mapstruct.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

    <!-- Compiler properties -->
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Sonar Cloud -->
    <sonar.projectKey>NinjaEnterprise_NinjaConfiguration</sonar.projectKey>
    <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
    <sonar.organization>ninja-enterprise</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.sources>src/main/java</sonar.sources>
    <sonar.java.binaries>target/classes</sonar.java.binaries>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Spring Cloud: dependencies -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Spring Cloud: config -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-config-server</artifactId>
    </dependency>

    <!-- Spring Boot: admin client -->
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot-admin-server.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Spring Cloud: bus-refresh -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bus-kafka</artifactId>
    </dependency>

    <!-- Spring Cloud: discovery client -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>

    <!-- Database connection -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Liquibase -->
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Hibernate annotations for validation -->
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- Spring Boot: data -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <!-- Mapstruct -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <!-- Libraries: search settings model -->
    <dependency>
      <groupId>io.github.ninjaenterprise</groupId>
      <artifactId>search-library-with-query-dsl</artifactId>
      <version>${search-library-model.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>docs/google-check-style.xml</configLocation>
          <violationSeverity>warning</violationSeverity>
          <consoleOutput>true</consoleOutput>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>initialize</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok-mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <compilerArg>
              -Amapstruct.defaultComponentModel=spring
            </compilerArg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mysema.maven</groupId>
        <artifactId>apt-maven-plugin</artifactId>
        <version>${apt-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <outputDirectory>target/generated-sources/java</outputDirectory>
              <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>